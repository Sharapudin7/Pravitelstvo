if (typeof jQuery == "undefined") throw new Error("jQuery is not loaded");
$.fn.zabuto_calendar = function (n) {
    var t = $.extend({}, $.fn.zabuto_calendar_defaults(), n),
        i = $.fn.zabuto_calendar_language(t.language);
    return (
        (t = $.extend({}, t, i)),
        this.each(function () {
            function h() {
                var h = parseInt(n.data("initYear")),
                    l = parseInt(n.data("initMonth")) - 1,
                    t = new Date(h, l, 1, 0, 0, 0, 0),
                    f,
                    r,
                    o,
                    u,
                    s;
                n.data("initDate", t);
                f = n.data("cellBorder") === !0 ? " table-bordered" : "";
                r = $('<table class="table' + f + '"></table>');
                r = i(n, r, t.getFullYear(), t.getMonth());
                o = c(n);
                u = $('<div class="zabuto_calendar"></div>');
                u.append(r);
                u.append(o);
                n.append(u);
                s = n.data("jsonData");
                !1 !== s && e(n, t.getFullYear(), t.getMonth());
            }
            function i(n, t, i, r) {
                var u = new Date(i, r, 1, 0, 0, 0, 0);
                return n.data("currDate", u), t.empty(), (t = l(n, t, i, r)), (t = a(n, t)), (t = v(n, t, i, r)), e(n, i, r), t;
            }
            function c(n) {
                var t = $('<div class="legend" id="' + n.attr("id") + '_legend"></div>'),
                    i = n.data("legendList");
                return (
                    typeof i == "object" &&
                        i.length > 0 &&
                        $(i).each(function (n, i) {
                            var r, u, e, o, f;
                            if (typeof i == "object" && "type" in i) {
                                r = "";
                                "label" in i && (r = i.label);
                                switch (i.type) {
                                    case "text":
                                        r !== "" &&
                                            ((u = ""),
                                            "badge" in i && ((e = typeof i.classname == "undefined" ? "badge-event" : i.classname), (u = '<span class="badge ' + e + '">' + i.badge + "</span> ")),
                                            t.append('<span class="legend-' + i.type + '">' + u + r + "</span>"));
                                        break;
                                    case "block":
                                        r !== "" && (r = "<span>" + r + "</span>");
                                        o = typeof i.classname == "undefined" ? "event" : "event-styled " + i.classname;
                                        t.append('<span class="legend-' + i.type + '"><ul class="legend"><li class="' + o + '"></li></ul>' + r + "</span>");
                                        break;
                                    case "list":
                                        "list" in i &&
                                            typeof i.list == "object" &&
                                            i.list.length > 0 &&
                                            ((f = $('<ul class="legend"></ul>')),
                                            $(i.list).each(function (n, t) {
                                                f.append('<li class="' + t + '"></li>');
                                            }),
                                            t.append(f));
                                        break;
                                    case "spacer":
                                        t.append('<span class="legend-' + i.type + '"> </span>');
                                }
                            }
                        }),
                    t
                );
            }
            function l(n, t, r, u) {
                var o = n.data("navIcons"),
                    b = $('<span><span class="glyphicon glyphicon-chevron-left"></span></span>'),
                    k = $('<span><span class="glyphicon glyphicon-chevron-right"></span></span>'),
                    h,
                    f,
                    c,
                    l,
                    a,
                    e,
                    v,
                    y,
                    p,
                    w;
                typeof o == "object" && ("prev" in o && b.html(o.prev), "next" in o && k.html(o.next));
                h = n.data("showPrevious");
                (typeof h == "number" || h === !1) && (h = s(n.data("showPrevious"), !0));
                f = $('<div class="calendar-month-navigation"></div>');
                f.attr("id", n.attr("id") + "_nav-prev");
                f.data("navigation", "prev");
                h !== !1 &&
                    ((c = u - 1),
                    (l = r),
                    c == -1 && ((l = l - 1), (c = 11)),
                    f.data("to", { year: l, month: c + 1 }),
                    f.append(b),
                    typeof n.data("actionNavFunction") == "function" && f.click(n.data("actionNavFunction")),
                    f.click(function () {
                        i(n, t, l, c);
                    }));
                a = n.data("showNext");
                (typeof a == "number" || a === !1) && (a = s(n.data("showNext"), !1));
                e = $('<div class="calendar-month-navigation"></div>');
                e.attr("id", n.attr("id") + "_nav-next");
                e.data("navigation", "next");
                a !== !1 &&
                    ((v = u + 1),
                    (y = r),
                    v == 12 && ((y = y + 1), (v = 0)),
                    e.data("to", { year: y, month: v + 1 }),
                    e.append(k),
                    typeof n.data("actionNavFunction") == "function" && e.click(n.data("actionNavFunction")),
                    e.click(function () {
                        i(n, t, y, v);
                    }));
                var g = n.data("monthLabels"),
                    nt = $("<td></td>").append(f),
                    tt = $("<td></td>").append(e),
                    d = $("<span>" + g[u] + " " + r + "</span>");
                return (
                    d.dblclick(function () {
                        var r = n.data("initDate");
                        i(n, t, r.getFullYear(), r.getMonth());
                    }),
                    (p = $('<td colspan="5"></td>')),
                    p.append(d),
                    (w = $('<tr class="calendar-month-header"></tr>')),
                    w.append(nt, p, tt),
                    t.append(w),
                    t
                );
            }
            function a(n, t) {
                var f, i, r, e, u;
                return (
                    n.data("showDays") === !0 &&
                        ((f = n.data("weekStartsOn")),
                        (i = n.data("dowLabels")),
                        f === 0 && ((r = $.extend([], i)), (e = new Array(r.pop())), (i = e.concat(r))),
                        (u = $('<tr class="calendar-dow-header"></tr>')),
                        $(i).each(function (n, t) {
                            u.append("<th>" + t + "</th>");
                        }),
                        t.append(u)),
                    t
                );
            }
            function v(n, t, i, e) {
                var ft = n.data("ajaxSettings"),
                    d = k(i, e),
                    g = f(i, e),
                    s = u(i, e, 1),
                    v = u(i, e, g),
                    h = 1,
                    ut = n.data("weekStartsOn"),
                    c,
                    nt,
                    y,
                    l,
                    o;
                for (
                    ut === 0 && (v == 6 && d++, s == 6 && (v == 0 || v == 1 || v == 5) && d--, s++, s == 7 && (s = 0)),
                        c = {
                            day: null,
                            month: null,
                            year: null,
                            mod: 1,
                            mode: "",
                            getYear: function () {
                                return this.year;
                            },
                            getMonth: function () {
                                return this.month;
                            },
                            getDay: function () {
                                return (this.day = this.day + this.mod), this.day;
                            },
                            setAsPrevMonth: function (n, t, i) {
                                if (this.mode !== "prev") {
                                    this.mod = 1;
                                    var r = t - 1,
                                        u = n;
                                    t === 0 && ((r = 11), (u = n - 1));
                                    t === 11 && ((r = 0), (u = n + 1));
                                    this.month = r;
                                    this.year = u;
                                    this.day = f(u, r) - i;
                                    this.mode = "prev";
                                }
                            },
                            setAsNextMonth: function (n, t) {
                                if (this.mode !== "next") {
                                    this.mod = 1;
                                    var i = t - 1,
                                        r = n;
                                    t === 0 && ((i = 11), (r = n - 1));
                                    t === 11 && ((i = 0), (r = n + 1));
                                    this.month = i;
                                    this.year = r;
                                    this.day = 0;
                                    this.mode = "next";
                                }
                            },
                        },
                        nt = 0;
                    nt < d;
                    nt++
                ) {
                    for (y = $('<tr class="calendar-dow"></tr>'), l = 0; l < 7; l++) {
                        if (l < s || h > g) {
                            l < s ? c.setAsPrevMonth(i, e, s) : h > g && c.setAsNextMonth(i, e, s);
                            var p = c.getDay(),
                                tt = c.getMonth(),
                                it = c.getYear(),
                                w = n.attr("id") + "_" + r(it, tt, p),
                                rt = w + "_day",
                                a = $('<div id="' + rt + '" class="day other-month" >' + p + "</div>");
                            a.data("day", p);
                            o = $('<td id="' + w + '"></td>');
                            o.append(a);
                            o.data("date", r(it, tt, p));
                            o.data("hasEvent", !1);
                            typeof n.data("actionFunction") == "function" &&
                                (o.addClass("dow-clickable"),
                                o.click(function () {
                                    n.data("selectedDate", $(this).data("date"));
                                }),
                                o.click(n.data("actionFunction")));
                            y.append(o);
                        } else {
                            var w = n.attr("id") + "_" + r(i, e, h),
                                rt = w + "_day",
                                a = $('<div id="' + rt + '" class="day" >' + h + "</div>");
                            a.data("day", h);
                            b(i, e, h) && (a.addClass("today"), n.data("showToday") === !0 && a.html('<span class="badge badge-today">' + h + "</span>"));
                            o = $('<td id="' + w + '"></td>');
                            o.append(a);
                            o.data("date", r(i, e, h));
                            o.data("hasEvent", !1);
                            typeof n.data("actionFunction") == "function" &&
                                (o.addClass("dow-clickable"),
                                o.click(function () {
                                    n.data("selectedDate", $(this).data("date"));
                                }),
                                o.click(n.data("actionFunction")));
                            y.append(o);
                            h++;
                        }
                        l == 6 && (s = 0);
                    }
                    t.append(y);
                }
                return t;
            }
            function y(n, t, i, r) {
                var l = $('<button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>'),
                    a = $('<h4 class="modal-title" id="' + n + '_modal_title">' + t + "</h4>"),
                    e = $('<div class="modal-header"></div>'),
                    h,
                    o,
                    c,
                    u,
                    s,
                    f;
                return (
                    e.append(l),
                    e.append(a),
                    (h = $('<div class="modal-body" id="' + n + '_modal_body">' + i + "</div>")),
                    (o = $('<div class="modal-footer" id="' + n + '_modal_footer"></div>')),
                    typeof r != "undefined" && ((c = $("<div>" + r + "</div>")), o.append(c)),
                    (u = $('<div class="modal-content"></div>')),
                    u.append(e),
                    u.append(h),
                    u.append(o),
                    (s = $('<div class="modal-dialog"></div>')),
                    s.append(u),
                    (f = $('<div class="modal fade" id="' + n + '_modal" tabindex="-1" role="dialog" aria-labelledby="' + n + '_modal_title" aria-hidden="true"></div>')),
                    f.append(s),
                    f.data("dateId", n),
                    f.attr("dateId", n),
                    f
                );
            }
            function e(n, t, i) {
                var r = n.data("jsonData"),
                    u = n.data("ajaxSettings");
                return (n.data("events", !1), !1 !== r) ? p(n) : !1 !== u ? w(n, t, i) : !0;
            }
            function p(n) {
                var t = n.data("jsonData");
                return n.data("events", t), o(n, "json"), !0;
            }
            function w(n, t, i) {
                var r = n.data("ajaxSettings"),
                    u;
                return typeof r != "object" || typeof r.url == "undefined"
                    ? (alert("Invalid calendar event settings"), !1)
                    : ((u = { year: t, month: i + 1 }),
                      $.ajax({ type: "GET", url: r.url, data: u, dataType: "json" }).done(function (t) {
                          var i = [];
                          $.each(t, function (n) {
                              i.push(t[n]);
                          });
                          n.data("events", i);
                          o(n, "ajax");
                      }),
                      !0);
            }
            function o(n, t) {
                var u = n.data("jsonData"),
                    i = n.data("ajaxSettings"),
                    r = n.data("events");
                r !== !1 &&
                    $(r).each(function (r, u) {
                        var f = n.attr("id") + "_" + u.date,
                            e = $("#" + f),
                            s = $("#" + f + "_day"),
                            h,
                            c,
                            o,
                            l;
                        e.data("hasEvent", !0);
                        typeof u.title != "undefined" && e.attr("title", u.title);
                        typeof u.classname == "undefined" ? e.addClass("event") : (e.addClass("event-styled"), s.addClass(u.classname));
                        typeof u.badge != "undefined" && u.badge !== !1 && ((h = u.badge === !0 ? "" : " badge-" + u.badge), (c = s.data("day")), s.html('<span class="badge badge-event' + h + '">' + c + "</span>"));
                        typeof u.body != "undefined" &&
                            ((o = !1),
                            t === "json" && typeof u.modal != "undefined" && u.modal === !0 ? (o = !0) : t === "ajax" && "modal" in i && i.modal === !0 && (o = !0),
                            o === !0 &&
                                (e.addClass("event-clickable"),
                                (l = y(f, u.title, u.body, u.footer)),
                                $("body").append(l),
                                $("#" + f).click(function () {
                                    $("#" + f + "_modal").modal();
                                })));
                    });
            }
            function b(n, t, i) {
                var r = new Date(),
                    u = new Date(n, t, i);
                return u.toDateString() == r.toDateString();
            }
            function r(n, t, i) {
                var r, u;
                return (u = i < 10 ? "0" + i : i), (r = t + 1), (r = r < 10 ? "0" + r : r), n + "-" + r + "-" + u;
            }
            function u(n, t, i) {
                var u = new Date(n, t, i, 0, 0, 0, 0),
                    r = u.getDay();
                return r == 0 ? (r = 6) : r--, r;
            }
            function f(n, t) {
                for (var i = 28; d(n, t + 1, i + 1); ) i++;
                return i;
            }
            function k(n, t) {
                var i = f(n, t),
                    o = u(n, t, 1),
                    s = u(n, t, i),
                    r = i,
                    e = o - s;
                return e > 0 && (r += e), Math.ceil(r / 7);
            }
            function d(n, t, i) {
                return t > 0 && t < 13 && n > 0 && n < 32768 && i > 0 && i <= new Date(n, t, 0).getDate();
            }
            function s(t, i) {
                t === !1 && (t = 0);
                var u = n.data("currDate"),
                    f = n.data("initDate"),
                    r;
                if (((r = (f.getFullYear() - u.getFullYear()) * 12), (r -= u.getMonth() + 1), (r += f.getMonth()), i === !0)) {
                    if (r < parseInt(t) - 1) return !0;
                } else if (r >= 0 - parseInt(t)) return !0;
                return !1;
            }
            var n = $(this);
            n.attr("id", "zabuto_calendar_" + Math.floor(Math.random() * 99999).toString(36));
            n.data("initYear", t.year);
            n.data("initMonth", t.month);
            n.data("monthLabels", t.month_labels);
            n.data("weekStartsOn", t.weekstartson);
            n.data("navIcons", t.nav_icon);
            n.data("dowLabels", t.dow_labels);
            n.data("showToday", t.today);
            n.data("showDays", t.show_days);
            n.data("showPrevious", t.show_previous);
            n.data("showNext", t.show_next);
            n.data("cellBorder", t.cell_border);
            n.data("jsonData", t.data);
            n.data("ajaxSettings", t.ajax);
            n.data("legendList", t.legend);
            n.data("actionFunction", t.action);
            n.data("actionNavFunction", t.action_nav);
            h();
        }),
        this
    );
};
$.fn.zabuto_calendar_defaults = function () {
    var n = new Date(),
        t = n.getFullYear(),
        i = n.getMonth() + 1;
    return { language: !1, year: t, month: i, show_previous: !0, show_next: !0, cell_border: !1, today: !1, show_days: !0, weekstartson: 1, nav_icon: !1, data: !1, ajax: !1, legend: !1, action: !1, action_nav: !1 };
};
$.fn.zabuto_calendar_language = function (n) {
    (typeof n == "undefined" || n === !1) && (n = "en");
    switch (n.toLowerCase()) {
        case "ar":
            return { month_labels: ["يناير", "فبراير", "مارس", "أبريل", "مايو", "يونيو", "يوليو", "أغسطس", "سبتمبر", "أكتوبر", "نوفمبر", "ديسمبر"], dow_labels: ["أثنين", "ثلاثاء", "اربعاء", "خميس", "جمعه", "سبت", "أحد"] };
        case "az":
            return { month_labels: ["Yanvar", "Fevral", "Mart", "Aprel", "May", "İyun", "İyul", "Avqust", "Sentyabr", "Oktyabr", "Noyabr", "Dekabr"], dow_labels: ["B.e", "Ç.A", "Çərş", "C.A", "Cümə", "Şən", "Baz"] };
        case "ca":
            return { month_labels: ["Gener", "Febrer", "Març", "Abril", "Maig", "Juny", "Juliol", "Agost", "Setembre", "Octubre", "Novembre", "Desembre"], dow_labels: ["Dl", "Dt", "Dc", "Dj", "Dv", "Ds", "Dg"] };
        case "cn":
            return { month_labels: ["一月", "二月", "三月", "四月", "五月", "六月", "七月", "八月", "九月", "十月", "十一月", "十二月"], dow_labels: ["星期一", "星期二", "星期三", "星期四", "星期五", "星期六", "星期日"] };
        case "cs":
            return { month_labels: ["Leden", "Únor", "Březen", "Duben", "Květen", "Červen", "Červenec", "Srpen", "Září", "Říjen", "Listopad", "Prosinec"], dow_labels: ["Po", "Út", "St", "Čt", "Pá", "So", "Ne"] };
        case "de":
            return { month_labels: ["Januar", "Februar", "März", "April", "Mai", "Juni", "Juli", "August", "September", "Oktober", "November", "Dezember"], dow_labels: ["Mo", "Di", "Mi", "Do", "Fr", "Sa", "So"] };
        case "en":
            return { month_labels: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"], dow_labels: ["Mon", "Tue", "Wed", "Thu", "Fri", "Sat", "Sun"] };
        case "he":
            return { month_labels: ["ינואר", "פברואר", "מרץ", "אפריל", "מאי", "יוני", "יולי", "אוגוסט", "ספטמבר", "אוקטובר", "נובמבר", "דצמבר"], dow_labels: ["ב", "ג", "ד", "ה", "ו", "ש", "א"] };
        case "es":
            return { month_labels: ["Enero", "Febrero", "Marzo", "Abril", "Mayo", "Junio", "Julio", "Agosto", "Septiembre", "Octubre", "Noviembre", "Diciembre"], dow_labels: ["Lu", "Ma", "Mi", "Ju", "Vi", "Sá", "Do"] };
        case "fi":
            return { month_labels: ["Tammikuu", "Helmikuu", "Maaliskuu", "Huhtikuu", "Toukokuu", "Kesäkuu", "Heinäkuu", "Elokuu", "Syyskuu", "Lokakuu", "Marraskuu", "Joulukuu"], dow_labels: ["Ma", "Ti", "Ke", "To", "Pe", "La", "Su"] };
        case "fr":
            return { month_labels: ["Janvier", "Février", "Mars", "Avril", "Mai", "Juin", "Juillet", "Août", "Septembre", "Octobre", "Novembre", "Décembre"], dow_labels: ["Lun", "Mar", "Mer", "Jeu", "Ven", "Sam", "Dim"] };
        case "hu":
            return { month_labels: ["Január", "Február", "Március", "Április", "Május", "Június", "Július", "Augusztus", "Szeptember", "Október", "November", "December"], dow_labels: ["Hé", "Ke", "Sze", "Cs", "Pé", "Szo", "Va"] };
        case "id":
            return { month_labels: ["Januari", "Februari", "Maret", "April", "Mei", "Juni", "Juli", "Agustus", "September", "Oktober", "November", "Desember"], dow_labels: ["Senin", "Selasa", "Rabu", "Kamis", "Jum'at", "Sabtu", "Minggu"] };
        case "it":
            return { month_labels: ["Gennaio", "Febbraio", "Marzo", "Aprile", "Maggio", "Giugno", "Luglio", "Agosto", "Settembre", "Ottobre", "Novembre", "Dicembre"], dow_labels: ["Lun", "Mar", "Mer", "Gio", "Ven", "Sab", "Dom"] };
        case "jp":
            return { month_labels: ["1月", "2月", "3月", "4月", "5月", "6月", "7月", "8月", "9月", "10月", "11月", "12月"], dow_labels: ["月", "火", "水", "木", "金", "土", "日"] };
        case "kr":
            return { month_labels: ["1월", "2월", "3월", "4월", "5월", "6월", "7월", "8월", "9월", "10월", "11월", "12월"], dow_labels: ["월", "화", "수", "목", "금", "토", "일"] };
        case "nl":
            return { month_labels: ["Januari", "Februari", "Maart", "April", "Mei", "Juni", "Juli", "Augustus", "September", "Oktober", "November", "December"], dow_labels: ["Ma", "Di", "Wo", "Do", "Vr", "Za", "Zo"] };
        case "no":
            return { month_labels: ["Januar", "Februar", "Mars", "April", "Mai", "Juni", "Juli", "August", "September", "Oktober", "November", "Desember"], dow_labels: ["Ma", "Ti", "On", "To", "Fr", "Lø", "Sø"] };
        case "pl":
            return { month_labels: ["Styczeń", "Luty", "Marzec", "Kwiecień", "Maj", "Czerwiec", "Lipiec", "Sierpień", "Wrzesień", "Październik", "Listopad", "Grudzień"], dow_labels: ["pon.", "wt.", "śr.", "czw.", "pt.", "sob.", "niedz."] };
        case "pt":
            return { month_labels: ["Janeiro", "Fevereiro", "Marco", "Abril", "Maio", "Junho", "Julho", "Agosto", "Setembro", "Outubro", "Novembro", "Dezembro"], dow_labels: ["S", "T", "Q", "Q", "S", "S", "D"] };
        case "ru":
            return { month_labels: ["Январь", "Февраль", "Март", "Апрель", "Май", "Июнь", "Июль", "Август", "Сентябрь", "Октябрь", "Ноябрь", "Декабрь"], dow_labels: ["Пн", "Вт", "Ср", "Чт", "Пт", "Сб", "Вс"] };
        case "se":
            return { month_labels: ["Januari", "Februari", "Mars", "April", "Maj", "Juni", "Juli", "Augusti", "September", "Oktober", "November", "December"], dow_labels: ["Mån", "Tis", "Ons", "Tor", "Fre", "Lör", "Sön"] };
        case "sk":
            return { month_labels: ["Január", "Február", "Marec", "Apríl", "Máj", "Jún", "Júl", "August", "September", "Október", "November", "December"], dow_labels: ["Po", "Ut", "St", "Št", "Pi", "So", "Ne"] };
        case "sr":
            return { month_labels: ["Јануар", "Фебруар", "Март", "Април", "Мај", "Јун", "Јул", "Август", "Септембар", "Октобар", "Новембар", "Децембар"], dow_labels: ["Пон", "Уто", "Сре", "Чет", "Пет", "Суб", "Нед"] };
        case "tr":
            return { month_labels: ["Ocak", "Şubat", "Mart", "Nisan", "Mayıs", "Haziran", "Temmuz", "Ağustos", "Eylül", "Ekim", "Kasım", "Aralık"], dow_labels: ["Pts", "Salı", "Çar", "Per", "Cuma", "Cts", "Paz"] };
        case "ua":
            return { month_labels: ["Січень", "Лютий", "Березень", "Квітень", "Травень", "Червень", "Липень", "Серпень", "Вересень", "Жовтень", "Листопад", "Грудень"], dow_labels: ["Пн", "Вт", "Ср", "Чт", "Пт", "Сб", "Нд"] };
    }
};
